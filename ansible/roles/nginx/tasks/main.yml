---

- name: Allow http ports
  ufw:
      insert: 1 # To make sure it always goes before denied
      rule: allow
      port: "{{ item }}"
      proto: tcp
  with_items:
      - 80
      - 443
      - 9002
      - 9001
  tags:
      - nginx
      - firewall

- name: Get required tars
  unarchive:
      src: "{{item}}"
      dest: /opt
      remote_src: yes
  with_items:
      - ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz
      - http://zlib.net/zlib-1.2.11.tar.gz
      - http://www.openssl.org/source/openssl-1.0.2f.tar.gz
      - http://nginx.org/download/nginx-{{nginx_version}}.tar.gz 

- name: Link to /opt/nginx
  file:
      src: /opt/nginx-{{nginx_version}}
      dest: /opt/nginx
      state: link

- name: Configure pcre and zlib
  command: ./configure
  args:
      chdir: /opt/{{item}}
  with_items:
      - pcre-8.40
      - zlib-1.2.11

- name: Configure ssl
  command: ./config --prefix=/usr
  args:
      chdir: /opt/openssl-1.0.2f

- name: Compile all prereqs
  make:
      target: install
      chdir: /opt/{{item}}
  with_items:
      - pcre-8.40
      - zlib-1.2.11
      - openssl-1.0.2f

- name: Configure nginx
  command: ./configure \
      --sbin-path={{nginx_sbin}} \
      --conf-path={{nginx_conf}}/nginx.conf \
      --pid-path={{nginx_pid}} \
      --with-pcre=../pcre-8.40 \
      --with-zlib=../zlib-1.2.11 \
      --with-http_ssl_module \
      --with-stream_ssl_preread_module \
      --with-stream \
      --with-mail=dynamic
  args:
      chdir: /opt/nginx
  tags:
      - compile-nginx

- name: Compile nginx
  make:
      target: install
      chdir: /opt/nginx
  tags:
      - compile-nginx



- name: Remove mainline nginx ppa
  apt_repository:
      repo: 'ppa:nginx/development'
      state: absent
  tags:
      - nginx


- name: Add nginx packages
  apt:
      name: nginx
      state: absent
  tags:
      - nginx

- name: Add nginx.service
  template:
      src: templates/nginx.service
      dest: /etc/systemd/system/nginx.service
  tags:
      - nginx
  notify:
      - Reload systemd
      - Restart nginx

- name: Add htpasswd
  apt: name=apache2-utils
  tags:
      - nginx

- name: Install passlib
  apt: name=python-passlib
  tags:
      - nginx

- name: Add user and password
  htpasswd:
      path: /etc/nginx/passwdfile
      name: "{{ proxy_user }}"
      password: "{{ proxy_pass }}"
      owner: root
      group: www-data
      mode: 0660
  notify:
      - Restart nginx
  tags:
      - nginx

- name: Add certbot
  get_url:
      url: https://dl.eff.org/certbot-auto
      dest: /root/certbot-auto
      mode: 0500
  tags:
      - rotate_cert
      - nginx
  notify:
      - Stop nginx
      - Rotate cert
      - Start nginx

- name: Add nginx config
  template:
      src: templates/nginx.conf
      dest: /etc/nginx/nginx.conf
      mode: 0440
  notify:
      - Reload nginx
  tags:
      - nginx
      - nginx-config


- name: Add nginx config dirs
  file:
      dest: "/etc/nginx/conf.d/{{item}}"
      state: directory
  with_items:
      - http
      - tcp
  tags:
      - nginx
      - nginx-config

